<Project>
  <Target Name="_SmiteLibFilterPackageAssets" AfterTargets="ResolvePackageAssets">
    <PropertyGroup>
      <_SmiteLibPackageDirectory>$([System.IO.Directory]::GetParent( $(MSBuildThisFileFullPath)   ))</_SmiteLibPackageDirectory>
      <_SmiteLibPackageDirectory>$([System.IO.Directory]::GetParent( $(_SmiteLibPackageDirectory) ))</_SmiteLibPackageDirectory>
    </PropertyGroup>

    <Message Text="_SmiteLibPackageDirectory: $(_SmiteLibPackageDirectory)" Importance="high" />

    <ItemGroup>
      <_SmiteLibCompileTimeReference Include="@(ResolvedCompileFileDefinitions)"
                                     Condition="$([System.String]::Copy(%(FullPath)).StartsWith(
                                       $(_SmiteLibPackageDirectory)
                                     ))"/>
    </ItemGroup>
    
    <!--<Message Text="_SmiteLibCompileTimeReference:&#xA;&#009;@(_SmiteLibCompileTimeReference->'%(FullPath)', '&#xA;&#009;')" Importance="high" />-->
    
    <ItemGroup>
      <_SmiteLibRemoveReference Include="@(_SmiteLibCompileTimeReference->WithMetadataValue('Filename', 'SmiteLib.Framework'))"
                                  Condition="'$(EnableSmiteLibFramework)' != 'true'" />

      <_SmiteLibRemoveReference Include="@(_SmiteLibCompileTimeReference->WithMetadataValue('Filename', 'SmiteLib.Engine'))"
                                  Condition="'$(EnableSmiteLibEngine)' != 'true'" />
    </ItemGroup>
    
    <ItemGroup>
      <_SmiteLibTestAdapter Include="@(_SmiteLibCompileTimeReference->WithMetadataValue('Filename', 'SmiteLib.VisualStudio.TestAdapter'))" />
      
      <_SmiteLibRemoveReference Include="@(_SmiteLibTestAdapter)" />
      <CopyLocalPaths Include="@(_SmiteLibTestAdapter)"
                               Condition="'$(EnableSmiteLibTestAdapter)' == 'true'"/>
    </ItemGroup>

    <Message Text="_SmiteLibRemoveReference:&#xA;&#009;@(_SmiteLibRemoveReference, '&#xA;&#009;')" Importance="high" />

    <ItemGroup>
      <ResolvedCompileFileDefinitions Remove="@(_SmiteLibRemoveReference)" />
      <ReferenceCopyLocalPaths  Include="@(CopyLocalPaths)"></ReferenceCopyLocalPaths >
    </ItemGroup>
  </Target> 
  
  
  <ItemGroup>
    <Reference Remove="$(MSBuildThisFileDirectory)../lib/SmiteLib.VisualStudio.TestAdapter.dll" Condition=" '$(EnableSmiteLibTestAdapter)' != 'false' " />
    <TestAdapterContent Include="$(MSBuildThisFileDirectory)Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.dll">
      <Link>Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.dll</Link>
      <!--<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>-->
      <Visible>False</Visible>
    </TestAdapterContent>
    <TestAdapterContent Include="$(MSBuildThisFileDirectory)\Microsoft.TestPlatform.AdapterUtilities.dll">
      <Link>Microsoft.TestPlatform.AdapterUtilities.dll</Link>
      <!--<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>-->
      <Visible>False</Visible>
    </TestAdapterContent>
  </ItemGroup>

  <ItemGroup>
    <!--
      Including `@(TestAdapterContent)` in the `None` ItemGroup to get the `CopyToOutputDirectory` behavior be default,
      package consumers can opt-out of this behavior by removing `@(TestAdapterContent)` from the `None` ItemGroup
      (i.e. `<None Remove="@(TestAdapterContent)" />`)
      -->
    <None Include="@(TestAdapterContent)" />
  </ItemGroup>

  <Target Name="DebugLogStuff" BeforeTargets="Build">
    <Message Text="TestAdapterContent: @(TestAdapterContent)" Importance="high" />
  </Target>
</Project>
